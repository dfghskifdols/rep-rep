import asyncio
import nest_asyncio
from telegram import Bot, Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.constants import ParseMode
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes, MessageHandler, filters
import logging
import random

nest_asyncio.apply()

API_TOKEN = '7705193251:AAEuxkW63TtCcXwizvAYUuoI7jH1570NgNU'  # –¢–æ–∫–µ–Ω –±–æ—Ç–∞
ADMIN_CHAT_ID = -1002651165474  # ID –≥—Ä—É–ø–ø—ã —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏, –∏–∑ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç –≤—ã–±—Ä–∞–Ω —Å–ª—É—á–∞–π–Ω—ã–π –∞–¥–º–∏–Ω
USER_CHAT_ID = 5283100992  # –í–∞—à ID –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –õ–°

logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                    level=logging.INFO)
logger = logging.getLogger(__name__)

bot = Bot(API_TOKEN)
app = Application.builder().token(API_TOKEN).build()

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, –º–æ–π –≥–æ—Å–ø–æ–¥–∏–Ω!"
async def send_welcome_message():
    await bot.send_message(chat_id=USER_CHAT_ID, text="–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, –º–æ–π –≥–æ—Å–ø–æ–¥–∏–Ω!")

# –§—É–Ω–∫—Ü–∏—è —Å—Ç–∞—Ä—Ç–∞
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ /report –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–ø–æ—Ä—Ç.")

# –§—É–Ω–∫—Ü–∏—è —Ä–µ–ø–æ—Ä—Ç–∞
async def report_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not update.message.reply_to_message:
        await update.message.reply_text("‚ö†Ô∏è –†–µ–ø–æ—Ä—Ç –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ø—Ä–∞–≤–∏–ª —Ä–µ–ø–æ—Ä—Ç
    message_id = update.message.message_id
    user_id = update.message.from_user.id

    keyboard = [[
        InlineKeyboardButton("‚úÖ –î–∞", callback_data=f"confirm_{user_id}_{message_id}"),
        InlineKeyboardButton("‚ùå –ù–µ—Ç", callback_data=f"cancel_{user_id}_{message_id}")
    ]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–ø–æ—Ä—Ç?", reply_markup=reply_markup)

# –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ–ø–æ—Ä—Ç–∞
async def handle_report(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    data = query.data.split("_")
    logger.info(f"Callback data: {data}")  # –õ–æ–≥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ñ–æ—Ä–º–∞—Ç–∞ –¥–∞–Ω–Ω—ã—Ö
    if len(data) < 3:  # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –º–µ–Ω—å—à–µ, —á–µ–º –Ω—É–∂–Ω–æ
        await query.message.edit_text("‚ùå –û—à–∏–±–∫–∞: –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö!")
        return

    action = data[0]
    try:
        user_id = int(data[1])  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤—Ç–æ—Ä–æ–π —ç–ª–µ–º–µ–Ω—Ç –≤ int (user_id)
        message_id = int(data[2])  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ç—Ä–µ—Ç–∏–π —ç–ª–µ–º–µ–Ω—Ç –≤ int (message_id)
    except ValueError:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {data}")  # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
        await query.message.edit_text("‚ùå –û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ–ø–æ—Ä—Ç–∞!")
        return

    logger.info(f"action: {action}, user_id: {user_id}, message_id: {message_id}")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∑–∞–ø—Ä–æ—Å –ø—Ä–∏—à–µ–ª –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ø—Ä–∞–≤–∏–ª —Ä–µ–ø–æ—Ä—Ç
    if query.from_user.id != user_id:
        logger.info("–ü–æ–ø—ã—Ç–∫–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å —á—É–∂–∏–º —Ä–µ–ø–æ—Ä—Ç–æ–º!")
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ù–ï –∏–∑–º–µ–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await query.answer(text="‚ùå –ù–µ–ª—å–∑—è –∂–º—è–∫–∞—Ç—å —á—É–∂–∏–µ —Ä–µ–ø–æ—Ä—Ç—ã!", show_alert=True)
        return

    try:
        if action == "confirm":
            original_message = await query.message.chat.get_message(message_id)
            reported_message = original_message.reply_to_message
            reported_user = reported_message.from_user

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ (–µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ)
            chat = query.message.chat
            if chat.username:
                message_link = f"https://t.me/{chat.username}/{reported_message.message_id}"
                link_text = f"<a href='{message_link}'>–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é</a>"
            else:
                link_text = "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º —á–∞—Ç–µ, —Å—Å—ã–ª–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞."

            # –¶–∏—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
            message_text = reported_message.text if reported_message.text else "(–º–µ–¥–∏–∞-—Ñ–∞–π–ª)"
            reported_user_mention = f"<b>{reported_user.full_name}</b> (@{reported_user.username})"

            # –¢–µ–∫—Å—Ç —Ä–µ–ø–æ—Ä—Ç–∞
            report_text = (
                f"‚ö†Ô∏è <b>–ù–æ–≤—ã–π —Ä–µ–ø–æ—Ä—Ç!</b>\n\n"
                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {reported_user_mention}\n"
                f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ:\n<blockquote>{message_text}</blockquote>\n"
                f"{link_text}"
            )

            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –∏–∑ –¥—Ä—É–≥–æ–≥–æ —á–∞—Ç–∞
            admins = await bot.get_chat_administrators(ADMIN_CHAT_ID)
            admin_mentions = [f"@{admin.user.username}" for admin in admins if admin.user.username]

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–ø–æ—Ä—Ç
            await bot.send_message(
                ADMIN_CHAT_ID, report_text,
                parse_mode=ParseMode.HTML,
                protect_content=True,
                disable_web_page_preview=True
            )

            await query.message.edit_text("‚úÖ –†–µ–ø–æ—Ä—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
        elif action == "cancel":
            await query.message.edit_text("‚ùå –†–µ–ø–æ—Ä—Ç –æ—Ç–º–µ–Ω–µ–Ω.")
    except Exception as e:
        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–µ–ø–æ—Ä—Ç–∞: {e}")
        await query.message.edit_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–µ–ø–æ—Ä—Ç–∞: {e}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context):
    message = update.message.text
    if "–ü–∏–Ω–≥" in message:
        await update.message.reply_text("–ê –Ω–∞—Ö—É—è –æ–Ω —Ç–µ–±–µ")

    if "–ù–µ–∫–æ" in message:
        # –ü–æ–ª—É—á–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –∏–∑ –¥—Ä—É–≥–æ–≥–æ —á–∞—Ç–∞
        admins = await bot.get_chat_administrators(ADMIN_CHAT_ID)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç
        if admins:
            # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            random_admin = random.choice(admins)
            random_username = random_admin.user.username if random_admin.user.username else "unknown_user"
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            sent_message = await update.message.reply_text("–≤—ã—á–∏—Å–ª–µ–Ω–∏—è –∫–æ—à–∫–æ-–¥–µ–≤–æ—á–∫–∏ –ø–æ –∞–π–ø–∏üíª")
            
            # –ó–∞–¥–µ—Ä–∂–∫–∞ 5 —Å–µ–∫—É–Ω–¥, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
            await asyncio.sleep(5)
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            await sent_message.edit_text(f"–ö–æ—à–∫–æ-–¥–µ–≤–æ—á–∫–∞ –≤—ã—á–∏—Å–ª–µ–Ω–∞! –û–Ω–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —É @{random_username}")
        else:
            await update.message.reply_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏–π!")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async def main():
    # –û—Ç–ø—Ä–∞–≤–∫–∞ "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ" –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
    await send_welcome_message()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("report", report_command))
    app.add_handler(CallbackQueryHandler(handle_report, pattern="^(confirm|cancel)_\d+_\d+$"))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    await app.run_polling(drop_pending_updates=True)

if __name__ == '__main__':
    loop = asyncio.get_event_loop()
    loop.run_until_complete(main())
